{"version":3,"sources":["components/Navbar.js","context/alert/alertContext.js","context/github/githubContext.js","components/Search.js","components/Card.js","pages/Home.js","pages/About.js","components/Repos.js","pages/Profile.js","components/Alert.js","context/types.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/github/githubReducer.js","context/github/GithubState.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","exact","to","alertContext","createContext","GithubContext","Search","useState","value","setValue","alert","useContext","github","type","placeholder","onChange","event","target","onKeyPress","key","clearUsers","trim","hide","search","show","Card","user","src","avatar_url","alt","login","Home","loading","users","Fragment","map","id","About","Repos","repos","repo","href","html_url","rel","name","Profile","match","getUser","getRepos","urlName","params","useEffect","company","location","bio","blog","followers","following","public_repos","public_gists","style","width","Alert","role","text","aria-label","onClick","aria-hidden","SHOW_ALERT","HIDE_ALERT","CLEAR_USERS","GET_REPOS","GET_USER","SEARCH_USERS","SET_LOADING","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","githubReducer","withCreds","url","process","GithubState","a","setLoading","axios","get","response","data","items","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4b2a777.chunk.js","sourcesContent":["import React from 'react'\nimport {NavLink} from 'react-router-dom'\n\nexport  const Navbar = () => (\n    <nav className=\"navbar navbar-dark bg-primary navbar-expand-lg\">\n        <div className=\"navbar-brand\">\n            Github Поиск\n        </div>\n        <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n               <NavLink exact to=\"/\" className=\"nav-link\">Главная</NavLink>\n            </li>\n            <li className=\"nav-item\">\n               <NavLink to=\"/about\" className=\"nav-link\">Информация</NavLink>\n            </li>\n        </ul>\n    </nav>\n)\n\n\n","import {createContext} from 'react'\n\nexport const alertContext = createContext()","import {createContext} from 'react'\n\nexport const GithubContext = createContext()","import React, {useContext, useState} from 'react'\nimport {alertContext} from \"../context/alert/alertContext\";\nimport {GithubContext} from \"../context/github/githubContext\";\n\nexport const Search = () => {\n    const [value, setValue] = useState('')\n    const alert = useContext(alertContext)\n    const github = useContext(GithubContext)\n\n    const onSubmit = event => {\n        if (event.key !== 'Enter') {\n            return\n        }\n\n        github.clearUsers()\n\n        if (value.trim()) {\n            alert.hide()\n            github.search(value.trim())\n        } else {\n            alert.show('Введите данные пользователя')\n        }\n    }\n\n    return (\n        <div className=\"form-group\">\n            <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Введите никнейм пользователя...\"\n                value={value}\n                onChange={event => setValue(event.target.value)}\n                onKeyPress={onSubmit}\n            />\n        </div>\n    )\n}","import React from \"react\"\nimport {Link} from \"react-router-dom\"\n\nexport const Card = ({user}) => (\n    <div className=\"card\">\n        <img src={user.avatar_url} alt={user.login} className=\"card-img-top\"/>\n        <div className=\"card-body\">\n            <h5 className=\"card-title\">{user.login}</h5>\n            <Link to={'profile/' + user.login} className=\"btn btn-primary\"> Открыть </Link>\n        </div>\n    </div>\n)","import React, {useContext} from 'react'\nimport {Search} from \"../components/Search\";\nimport {Card} from \"../components/Card\";\nimport {GithubContext} from \"../context/github/githubContext\";\n\nexport const Home = () => {\n\n    const {loading, users} = useContext(GithubContext)\n\n    return (\n        <React.Fragment>\n            <Search/>\n            <div className=\"row\">\n\n                {loading\n                  ? <p className=\"text-center\">Загрузка</p>\n                    : users.map(user => (\n                        <div className=\"col-sm-4 mb-4\" key={user.id}>\n                            <Card user={user}/>\n                        </div>\n                    ))\n                }\n\n\n\n            </div>\n        </React.Fragment>\n    )\n}","import React from 'react'\n\nexport const About = () => {\n    return (\n        <div className=\"jumbotron jumbotron-fluid\">\n            <div className=\"container\">\n                <h1 className=\"display-4\">Информация</h1>\n                <p className=\"lead\">Вервися приложения: <strong>1.0.0</strong></p>\n            </div>\n        </div>\n    )\n}","import React from 'react'\n\nexport const Repos = ({repos}) => (\n    <React.Fragment>\n        {repos.map(repo => (\n            <div className=\"card mb-3\" key={repo.id}>\n                <div className=\"card-body\">\n                    <h5>\n                        <a\n                            href={repo.html_url}\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                        >{repo.name}</a>\n                    </h5>\n                </div>\n            </div>\n        ))}\n    </React.Fragment>\n)","import React, {useContext, useEffect} from 'react'\nimport {GithubContext} from \"../context/github/githubContext\";\nimport {Link} from \"react-router-dom\";\nimport {Repos} from \"../components/Repos\";\n\nexport const Profile = ({match}) => {\n\n    const {getUser, getRepos, loading, user, repos} = useContext(GithubContext)\n    const urlName = match.params.name\n\n    useEffect(() => {\n        getUser(urlName)\n        getRepos(urlName)\n        // eslint-disable-next-line\n    }, [])\n\n    if (loading) {\n        return <p className=\"text-center\">Загрузка...</p>\n    }\n\n    const {\n        name, company, avatar_url,\n        location, bio, blog,\n        login, html_url, followers,\n        following, public_repos, public_gists\n    } = user\n\n    return (\n        <React.Fragment>\n            <Link to=\"/\" className=\"btn btn-link\">На главную</Link>\n\n            <div className=\"card mb-4\">\n                <div className=\"card-body\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-3 text-center\">\n                            <img\n                                src={avatar_url}\n                                alt={name}\n                                style={{width:'150px'}}\n                            />\n                            <h3>{name}</h3>\n                            {location && <p>Местоположение: {location}</p>}\n                        </div>\n\n                        <div className=\"col\">\n                            {\n                                bio && <React.Fragment>\n                                    <h3>О себе</h3>\n                                    <p>{bio}</p>\n                                </React.Fragment>\n                            }\n\n                            <a\n                                href={html_url}\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                className=\"btn btn-dark\"\n                            >Открыть профиль</a>\n                            <ul>\n                                {login && <li>\n                                    <strong>Никнейм: </strong> {login}\n                                </li>}\n                                {company && <li>\n                                    <strong>Компания: </strong> {company}\n                                </li>}\n                                {blog && <li>\n                                    <strong>Вебсайт: </strong> {blog}\n                                </li>}\n                            </ul>\n\n\n                            <div className=\"badge badge-primary\"> Подписчики : {followers}</div>\n                            <div className=\"badge badge-success\"> Подписки : {following}</div>\n                            <div className=\"badge badge-info\"> Репозитории : {public_repos}</div>\n                            <div className=\"badge badge-dark\"> Gists : {public_gists}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Repos repos={repos}/>\n        </React.Fragment>\n    )\n}","import React, {useContext} from \"react\"\nimport {alertContext} from \"../context/alert/alertContext\";\n\nexport const Alert = () => {\n\n    const {alert, hide} =useContext(alertContext)\n\n    if(!alert) return null\n\n    return (\n        <div className={`alert alert-${alert.type || 'secondary'} alert-dismissible`}\n             role=\"alert\"\n        >\n            {alert.text}\n            <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={hide}>\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n        </div>\n    )\n}","export const SHOW_ALERT = 'SHOW_ALERT'\nexport const HIDE_ALERT = 'HIDE_ALERT'\n\nexport const CLEAR_USERS = 'CLEAR_USERS'\nexport const GET_REPOS = 'GET_REPOS'\nexport const GET_USER = 'GET_USER'\nexport const SEARCH_USERS = 'SEARCH_USERS'\nexport const SET_LOADING = 'SET_LOADING'\n\n","import {HIDE_ALERT, SHOW_ALERT} from \"../types\";\n\nconst handlers = {\n    [SHOW_ALERT]: (state, action) => action.payload,\n    [HIDE_ALERT]: () => null,\n    DEFAULT: state => state\n}\n\nexport const  alertReducer = (state, action) => {\n    const handler = handlers[action.type] || handlers.DEFAULT\n    return handler(state, action)\n}","import React, {useReducer} from \"react\"\nimport {alertContext} from \"./alertContext\";\nimport {alertReducer} from \"./alertReducer\";\nimport {HIDE_ALERT, SHOW_ALERT} from \"../types\";\n\nexport const AlertState = ({children}) => {\n\n    const [state, dispatch] = useReducer(alertReducer, null)\n\n    const hide = () => dispatch({type: HIDE_ALERT})\n\n    const show = (text, type = 'secondary') => {\n        dispatch({\n            type: SHOW_ALERT,\n            payload: {type, text}\n        })\n    }\n\n    return (\n        <alertContext.Provider value={{hide, show, alert: state}}>\n            {children}\n        </alertContext.Provider>\n    )\n}","import {CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING} from \"../types\";\n\n\nconst handlers = {\n    [SEARCH_USERS]: (state, {payload}) => ({...state, users: payload, loading: false}),\n    [GET_REPOS]: (state, {payload}) => ({...state, repos: payload, loading: false}),\n    [GET_USER]: (state, {payload}) => ({...state, user: payload, loading: false}),\n    [CLEAR_USERS]: state => ({...state, users: []}),\n    [SET_LOADING]: state => ({...state, loading: true}),\n    DEFAULT: state => state\n}\n\nexport const githubReducer = (state, action) => {\n    const handler = handlers[action.type] || handlers.DEFAULT\n    return handler(state, action)\n}","import React, {useReducer} from 'react'\nimport axios from \"axios\";\nimport {GithubContext} from \"./githubContext\"\nimport {githubReducer} from \"./githubReducer\"\nimport {CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING} from \"../types\"\n\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET\n\nconst withCreds = url => {\n    return `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\n}\n\nexport const GithubState = ({children}) => {\n    const initialState = {\n        user: {},\n        users: [],\n        repos: [],\n        loading: false\n    }\n\n    const [state, dispatch] = useReducer(githubReducer, initialState)\n\n    const search = async value => {\n        setLoading()\n\n        const response = await axios.get(withCreds(`https://api.github.com/search/users?q=${value}&`))\n\n        dispatch({\n            type: SEARCH_USERS,\n            payload: response.data.items\n        })\n    }\n\n    const getUser = async name => {\n        setLoading()\n\n        const response = await axios.get(withCreds(`https://api.github.com/users/${name}?`))\n\n        dispatch({\n            type: GET_USER,\n            payload: response.data\n        })\n    }\n\n    const getRepos = async name => {\n        setLoading()\n\n        const response = await axios.get(withCreds(`https://api.github.com/users/${name}/repos?per_page=5&`))\n\n        dispatch({\n            type: GET_REPOS,\n            payload: response.data\n        })\n    }\n\n    const clearUsers = () => dispatch({type: CLEAR_USERS})\n\n    const setLoading = () => dispatch({type: SET_LOADING})\n\n    const {user, users, repos, loading} = state\n\n    return (\n        <GithubContext.Provider value={{\n            search, getUser, getRepos, clearUsers, setLoading,\n            user, users, repos, loading\n        }}>\n            {children}\n        </GithubContext.Provider>\n    )\n}","import React from 'react'\nimport {Navbar} from \"./components/Navbar\"\nimport {Home} from \"./pages/Home\"\nimport {BrowserRouter, Switch, Route, HashRouter} from 'react-router-dom'\nimport {About} from \"./pages/About\";\nimport {Profile} from \"./pages/Profile\";\nimport {Alert} from \"./components/Alert\";\nimport {AlertState} from \"./context/alert/AlertState\";\nimport {GithubState} from \"./context/github/GithubState\";\n\nfunction App() {\n    return (\n        <GithubState>\n            <AlertState>\n                <HashRouter>\n                    <Navbar/>\n                    <div className=\"container pt-4\">\n                        <Alert alert={{text: 'Text Alert', type: 'warning'}}/>\n                        <Switch>\n                            <Route path=\"/\" exact component={Home}/>\n                            <Route path=\"/about\" component={About}/>\n                            <Route path=\"/profile/:name\" component={Profile}/>\n                        </Switch>\n                    </div>\n                </HashRouter>\n            </AlertState>\n        </GithubState>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}